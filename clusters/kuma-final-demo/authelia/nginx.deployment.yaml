apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia-proxy
  namespace: authelia
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-config
              subPath: nginx.conf
              readOnly: true
            - name: nginx-config
              mountPath: /config/nginx/snippets/authelia-location.conf
              subPath: authelia-location.conf
              readOnly: true
            - name: nginx-config
              mountPath: /config/nginx/snippets/proxy.conf
              subPath: proxy.conf
              readOnly: true
            - name: nginx-config
              mountPath: /config/nginx/snippets/authelia-authrequest.conf
              subPath: authelia-authrequest.conf
              readOnly: true
            - name: nginx-config
              mountPath: /config/nginx/snippets/ssl.conf
              subPath: ssl.conf
              readOnly: true
            - name: tls-certs
              mountPath: /ssl/tls.crt
              subPath: tls.crt
              readOnly: true
            - name: tls-certs
              mountPath: /ssl/tls.key
              subPath: tls.key
              readOnly: true
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: proxy.conf
                path: proxy.conf
              - key: authelia-location.conf
                path: authelia-location.conf
              - key: authelia-authrequest.conf
                path: authelia-authrequest.conf
              - key: ssl.conf
                path: ssl.conf
        - name: tls-certs
          secret:
            secretName: kuberbitnetes-wildcard
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
