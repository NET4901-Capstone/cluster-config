apiVersion: v1
data:
  nginx.conf: |-
    events {

    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        server {
            listen       80;
            server_name  example.org;
            return 200;
        }

        server {
            listen       8080;
            server_name  example.org;
            return 200;
        }

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
kind: ConfigMap
metadata:
  name: nginx-config-b9f75kh6cm
  namespace: ns-nse-composition
---
apiVersion: v1
data:
  config.yaml: |
    allow icmp:
      ispermit: 1
      proto: 1
      srcportoricmptypelast: 65535
      dstportoricmpcodelast: 65535
    allow tcp8080:
      ispermit: 1
      proto: 6
      srcportoricmptypelast: 65535
      dstportoricmpcodefirst: 8080
      dstportoricmpcodelast: 8080
    forbid tcp80:
      proto: 6
      srcportoricmptypelast: 65535
      dstportoricmpcodefirst: 80
      dstportoricmpcodelast: 80
kind: ConfigMap
metadata:
  name: vppagent-firewall-config-file
  namespace: ns-nse-composition
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nse-firewall-vpp
  name: nse-firewall-vpp
  namespace: ns-nse-composition
spec:
  selector:
    matchLabels:
      app: nse-firewall-vpp
  template:
    metadata:
      labels:
        app: nse-firewall-vpp
        spiffe.io/spiffe-id: "true"
    spec:
      containers:
      - env:
        - name: NSM_SERVICE_NAME
          value: nse-composition
        - name: NSM_LABELS
          value: app:firewall
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///run/spire/sockets/agent.sock
        - name: NSM_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NSM_LOG_LEVEL
          value: TRACE
        - name: NSM_CONNECT_TO
          value: unix:///var/lib/networkservicemesh/nsm.io.sock
        image: ghcr.io/networkservicemesh/ci/cmd-nse-firewall-vpp:0f2804f
        imagePullPolicy: IfNotPresent
        name: nse
        resources:
          limits:
            cpu: 500m
            memory: 450Mi
          requests:
            cpu: 150m
        volumeMounts:
        - mountPath: /etc/vppagent-firewall/config.yaml
          name: vppagent-firewall-config-volume
          subPath: config.yaml
        - mountPath: /run/spire/sockets
          name: spire-agent-socket
          readOnly: true
        - mountPath: /var/lib/networkservicemesh
          name: nsm-socket
          readOnly: true
      volumes:
      - configMap:
          name: vppagent-firewall-config-file
        name: vppagent-firewall-config-volume
      - hostPath:
          path: /run/spire/sockets
          type: Directory
        name: spire-agent-socket
      - hostPath:
          path: /var/lib/networkservicemesh
          type: DirectoryOrCreate
        name: nsm-socket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nse-kernel
  name: nse-kernel
  namespace: ns-nse-composition
spec:
  selector:
    matchLabels:
      app: nse-kernel
  template:
    metadata:
      labels:
        app: nse-kernel
        spiffe.io/spiffe-id: "true"
    spec:
      containers:
      - env:
        - name: NSM_CIDR_PREFIX
          value: 172.16.1.100/31
        - name: NSM_SERVICE_NAMES
          value: nse-composition
        - name: NSM_REGISTER_SERVICE
          value: "false"
        - name: NSM_LABELS
          value: app:gateway
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///run/spire/sockets/agent.sock
        - name: NSM_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NSM_LOG_LEVEL
          value: TRACE
        - name: NSM_CONNECT_TO
          value: unix:///var/lib/networkservicemesh/nsm.io.sock
        image: ghcr.io/networkservicemesh/ci/cmd-nse-icmp-responder:9e479a6
        imagePullPolicy: IfNotPresent
        name: nse
        resources:
          limits:
            cpu: 200m
            memory: 80Mi
          requests:
            cpu: 100m
            memory: 40Mi
        volumeMounts:
        - mountPath: /run/spire/sockets
          name: spire-agent-socket
          readOnly: true
        - mountPath: /var/lib/networkservicemesh
          name: nsm-socket
          readOnly: true
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          readOnly: true
          subPath: nginx.conf
      volumes:
      - configMap:
          name: nginx-config-b9f75kh6cm
        name: nginx-config
      - hostPath:
          path: /run/spire/sockets
          type: Directory
        name: spire-agent-socket
      - hostPath:
          path: /var/lib/networkservicemesh
          type: DirectoryOrCreate
        name: nsm-socket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nse-firewall-vpp
  name: nse-passthrough-1
  namespace: ns-nse-composition
spec:
  selector:
    matchLabels:
      app: nse-firewall-vpp
  template:
    metadata:
      labels:
        app: nse-firewall-vpp
        spiffe.io/spiffe-id: "true"
    spec:
      containers:
      - env:
        - name: NSM_SERVICE_NAME
          value: nse-composition
        - name: NSM_LABELS
          value: app:passthrough-1
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///run/spire/sockets/agent.sock
        - name: NSM_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NSM_CONNECT_TO
          value: unix:///var/lib/networkservicemesh/nsm.io.sock
        image: ghcr.io/networkservicemesh/ci/cmd-nse-firewall-vpp:0f2804f
        imagePullPolicy: IfNotPresent
        name: nse
        resources:
          limits:
            cpu: 500m
            memory: 450Mi
          requests:
            cpu: 150m
        volumeMounts:
        - mountPath: /run/spire/sockets
          name: spire-agent-socket
          readOnly: true
        - mountPath: /var/lib/networkservicemesh
          name: nsm-socket
          readOnly: true
      volumes:
      - hostPath:
          path: /run/spire/sockets
          type: Directory
        name: spire-agent-socket
      - hostPath:
          path: /var/lib/networkservicemesh
          type: DirectoryOrCreate
        name: nsm-socket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nse-firewall-vpp
  name: nse-passthrough-2
  namespace: ns-nse-composition
spec:
  selector:
    matchLabels:
      app: nse-firewall-vpp
  template:
    metadata:
      labels:
        app: nse-firewall-vpp
        spiffe.io/spiffe-id: "true"
    spec:
      containers:
      - env:
        - name: NSM_SERVICE_NAME
          value: nse-composition
        - name: NSM_LABELS
          value: app:passthrough-2
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///run/spire/sockets/agent.sock
        - name: NSM_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NSM_CONNECT_TO
          value: unix:///var/lib/networkservicemesh/nsm.io.sock
        image: ghcr.io/networkservicemesh/ci/cmd-nse-firewall-vpp:0f2804f
        imagePullPolicy: IfNotPresent
        name: nse
        resources:
          limits:
            cpu: 500m
            memory: 450Mi
          requests:
            cpu: 150m
        volumeMounts:
        - mountPath: /run/spire/sockets
          name: spire-agent-socket
          readOnly: true
        - mountPath: /var/lib/networkservicemesh
          name: nsm-socket
          readOnly: true
      volumes:
      - hostPath:
          path: /run/spire/sockets
          type: Directory
        name: spire-agent-socket
      - hostPath:
          path: /var/lib/networkservicemesh
          type: DirectoryOrCreate
        name: nsm-socket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nse-firewall-vpp
  name: nse-passthrough-3
  namespace: ns-nse-composition
spec:
  selector:
    matchLabels:
      app: nse-firewall-vpp
  template:
    metadata:
      labels:
        app: nse-firewall-vpp
        spiffe.io/spiffe-id: "true"
    spec:
      containers:
      - env:
        - name: NSM_SERVICE_NAME
          value: nse-composition
        - name: NSM_LABELS
          value: app:passthrough-3
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///run/spire/sockets/agent.sock
        - name: NSM_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NSM_CONNECT_TO
          value: unix:///var/lib/networkservicemesh/nsm.io.sock
        image: ghcr.io/networkservicemesh/ci/cmd-nse-firewall-vpp:0f2804f
        imagePullPolicy: IfNotPresent
        name: nse
        resources:
          limits:
            cpu: 500m
            memory: 450Mi
          requests:
            cpu: 150m
        volumeMounts:
        - mountPath: /run/spire/sockets
          name: spire-agent-socket
          readOnly: true
        - mountPath: /var/lib/networkservicemesh
          name: nsm-socket
          readOnly: true
      volumes:
      - hostPath:
          path: /run/spire/sockets
          type: Directory
        name: spire-agent-socket
      - hostPath:
          path: /var/lib/networkservicemesh
          type: DirectoryOrCreate
        name: nsm-socket
---
apiVersion: networkservicemesh.io/v1
kind: NetworkService
metadata:
  name: nse-composition
  namespace: ns-nse-composition
spec:
  matches:
  - routes:
    - destination_selector:
        app: passthrough-1
    source_selector:
      app: firewall
  - routes:
    - destination_selector:
        app: passthrough-2
    source_selector:
      app: passthrough-1
  - routes:
    - destination_selector:
        app: passthrough-3
    source_selector:
      app: passthrough-2
  - routes:
    - destination_selector:
        app: gateway
    source_selector:
      app: passthrough-3
  - routes:
    - destination_selector:
        app: firewall
  payload: ETHERNET
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    networkservicemesh.io: kernel://nse-composition/nsm-1
  labels:
    app: alpine
  name: alpine
  namespace: ns-nse-composition
spec:
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - nse-kernel
        topologyKey: kubernetes.io/hostname
  containers:
  - image: alpine:3.15.0
    imagePullPolicy: IfNotPresent
    name: alpine
    stdin: true
    tty: true
